@page "/Room/{roomId:int}/{userId:int}"
@using StoryPointEstimatorBlazorApp.Models
@using SqlDataAccessLib
@using SQLDataAccessLibrary.Models
@inject DisplayGroupedModel newGroupModel
@inject IRoomDataAccess _dB
@inject IDialogService DialogService

<div>
    <MudAppBar Class="appbar" @bind-Button="Voting_Mode">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())"/>
        ScrumSpace - 
        <MudButton Link="/" Class="appbar-buttons"> 
            Home
        </MudButton> |
        <MudButton OnClick="() => setVotingMode(1)" Class="appbar-buttons">
            Fibonacci Tool
        </MudButton> |
        <MudButton OnClick="() => setVotingMode(2)" Class="appbar-buttons">
            Fist of Five
        </MudButton> |
        <MudButton OnClick="() => setVotingMode(3)" Class="appbar-buttons">
             T-Shirt Sizing
        </MudButton> |
        <MudButton OnClick="() => setVotingMode(4)" Class="appbar-buttons">
             Custom Voting
        </MudButton> |
        <MudButton OnClick="() => setVotingMode(5)" Class="appbar-buttons">
             Timer
        </MudButton> 
        <MudSpacer />
        <MudText Class="appbar-buttons">@roomGroupModel.userName</MudText>
        <MudMenu Icon="@Icons.Filled.Settings" Color="Color.Inherit" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopRight">
            <MudMenuItem @onclick="OpenDialog">User Profile</MudMenuItem>
            <MudMenuItem>Dark Mode</MudMenuItem>
            <MudMenuItem>About</MudMenuItem>
        </MudMenu>
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen" Class="drawer">
        <a href="aboutUs" class="drawer">About Us</a>
    </MudDrawer>

</div>
@if (loading)
{
    <MudText>Your Room is loading...</MudText>
}
else{
    <div class="mainContainer">
        <div class="button-label-container">
            <MudItem xs="12">
            <MudPaper Class="mud-paper-buttons" Height ="650px" Elevation="0">    
                @if(Voting_Mode==1) 
                {
                    <MudItem xs="6">
                        <MudPaper Class="mud-paper-tool-name" Elevation="0">    
                            <MudText Class="mud-paper-tool-name"> Fibonacci Tool</MudText>
                        </MudPaper>
                    </MudItem>
                    <MudButton OnClick='() => setVote("?")' Class="tool-buttons">
                        ?</MudButton>
                    <MudButton OnClick='() => setVote("0")' Class="tool-buttons">
                         0
                    </MudButton>
                    <MudButton OnClick='() => setVote("0.5")' Class="tool-buttons">
                         @half
                    </MudButton>
                    <MudButton OnClick='() => setVote("1")' Class="tool-buttons">
                         1
                    </MudButton>
                    <MudButton OnClick='() => setVote("2")' Class="tool-buttons">
                         2
                    </MudButton>
                    <MudButton OnClick='() => setVote("3")' Class="tool-buttons">
                         3
                    </MudButton>
                    <MudButton OnClick='() => setVote("5")' Class="tool-buttons">
                         5
                    </MudButton>
                    <MudButton OnClick='() => setVote("8")' Class="tool-buttons">
                         8
                    </MudButton>
                    <MudButton OnClick='() => setVote("13")' Class="tool-buttons">
                         13
                    </MudButton>
                    <MudButton OnClick='() => setVote("20")' Class="tool-buttons">
                         20
                    </MudButton>
                    <MudButton OnClick='() => setVote("40")' Class="tool-buttons">
                         40
                    </MudButton>
                    <MudButton OnClick='() => setVote("100")' Class="tool-buttons">
                         100
                    </MudButton>
                    <MudButton OnClick='() => setVote("Coffee")' Class="tool-buttons">
                         @coffee
                    </MudButton> 
                }
                @if(Voting_Mode == 2)
                {
                    <MudItem xs="6">
                        <MudPaper Class="mud-paper-tool-name" Elevation="0">    
                            <MudText Class="mud-paper-tool-name"> T-Shirt Sizing</MudText>
                        </MudPaper>
                    </MudItem>
                    <MudButton OnClick='() => setVote("1")' Class="tool-buttons">
                         1
                    </MudButton>
                    <MudButton OnClick='() => setVote("2")' Class="tool-buttons">
                         2
                    </MudButton>
                    <MudButton OnClick='() => setVote("3")' Class="tool-buttons">
                         3
                    </MudButton>
                    <MudButton OnClick='() => setVote("4")' Class="tool-buttons">
                         4
                    </MudButton>
                    <MudButton OnClick='() => setVote("5")' Class="tool-buttons">
                         5
                    </MudButton> 
                }
                @if(Voting_Mode == 3)
                {
                    <MudItem xs="6">
                        <MudPaper Class="mud-paper-tool-name" Elevation="0">    
                            <MudText Class="mud-paper-tool-name"> Fist of Five</MudText>
                        </MudPaper>
                    </MudItem>                
                    <MudButton OnClick='() => setVote("XS")' Class="tool-buttons">
                         XS
                    </MudButton>
                    <MudButton OnClick='() => setVote("S")' Class="tool-buttons">
                         S
                    </MudButton>
                    <MudButton OnClick='() => setVote("M")' Class="tool-buttons">
                         M
                    </MudButton>
                    <MudButton OnClick='() => setVote("L")' Class="tool-buttons">
                         L
                    </MudButton>
                    <MudButton OnClick='() => setVote("XL")' Class="tool-buttons">
                         XL
                    </MudButton> 
                }
                @if(Voting_Mode==4) 
                {
                    <MudItem>
                        <MudPaper Class="mud-paper-custom-scale" Elevation="0">    
                            <MudText Class="mud-paper-custom-scale"> Custom Voting</MudText>
                            <MudTextField @bind-Value="customTitle" Class="custom-scale-input" Label="Enter Label Name" Variant="Variant.Outlined" Clearable="true"></MudTextField>
                            <MudTextField @bind-Value="customTitle" Class="custom-scale-input" Label="Enter Size (1-24)" Variant="Variant.Outlined" Clearable="true"></MudTextField>
                            <button type="submit" class="btn admin-tools-buttons">Update</button>
                        </MudPaper>
                    </MudItem>

                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        1</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        2</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        3</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        4</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        5</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        6</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        7</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        8</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        9</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        10</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        11</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        12</MudButton>    
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        13</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        14</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        15</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        16</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        17</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        18</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        19</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        20</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        21</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        22</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        23</MudButton>
                    <MudButton Link="" Variant="Variant.Filled"  Class="tool-buttons">
                        24</MudButton>    
                }
            </MudPaper>
            </MudItem>
            <MudItem xs="12">
            <MudPaper Class="mud-paper-room-labels" Elevation="0">  
                <MudChip Class="mud-chip" >Room Name: @roomGroupModel.roomName</MudChip>
                <MudChip Class="mud-chip" >Room Code: @roomId</MudChip>
            </MudPaper>
            </MudItem>
        </div>
        <div>
        <MudPaper Class="mud-paper-admin-tools" Height ="115px" Elevation="0">
        <MudItem xs="6">
                <MudText Class="mud-paper-tool-name">Admin Tools</MudText>
        </MudItem>
        <button type="submit" class="btn admin-tools-buttons">Delete Votes</button>
        <button type="submit" class="btn admin-tools-buttons">Hide Votes</button>
        <button type="submit" class="btn admin-tools-buttons">Hide Users</button>
        <button type="submit" class="btn admin-tools-buttons">Clear Users</button>
        <button type="submit" class="btn admin-tools-buttons">Save Results</button>
    </MudPaper>
        <MudItem xs="12">
        <MudPaper Class="mud-paper-table" Height ="500px" Elevation="0">
        <MudItem>
                <MudText Class="mud-paper-tool-name"> Results</MudText>
        </MudItem>
        <MudSimpleTable Style="overflow-x: auto;" Class="table">
            <thead>
                <tr>
                    @foreach (var h in headings)
                    {
                        <th>@h</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var row in rows)
                {
                    <tr>
                        @foreach (var x in row.Split())
                        {
                            <td>@x</td>
                        }
                    </tr>
                }
            </tbody>
        </MudSimpleTable>
    </MudPaper>
    </MudItem>
    <MudDialog @bind-IsVisible="visible" Options="dialogOptions">
        <DialogContent>
            <MudText Style="font-size: 30px">User Profile</MudText>
            <MudText Style="font-size: 16px">Current Username: @roomGroupModel.userName</MudText>
            <MudTextField @bind-Value="newGroupModel.userName" Variant="@Variant.Filled" Validation="@(new Func<string, IEnumerable<string>>(TextValidation))" Mask="@mask" Label="Change Username"></MudTextField>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="CloseDialog">Cancel</MudButton>
            <MudButton Color="Color.Primary" OnClick="SubmitDialog">Save</MudButton>
        </DialogActions>
    </MudDialog>
    </div>
    </div>
}
@code {
    //data
    [Parameter]
    public int roomId{ get; set; }
    [Parameter]
    public int userId{ get; set; }
    private bool loading = true;
    private DisplayGroupedModel roomGroupModel = new DisplayGroupedModel();

    protected override async Task OnInitializedAsync()
    {
        roomModel roomData = await _dB.GetRoomData(roomId);
        userModel userData = await _dB.GetUserData(userId);
        roomGroupModel.userName = userData.userName;
        roomGroupModel.roomName = roomData.roomName;
        loading = false;
    }

    //Validation
    IMask mask = new RegexMask(@"^[a-zA-Z0-9_-]+$");

    private IEnumerable<string> TextValidation(string ch)
    {
        if (!string.IsNullOrEmpty(ch) && 50 < ch?.Length)
        {
            //validSubmit = false;
            yield return "Too many characters";
        }
        else if (!string.IsNullOrEmpty(ch) && 3 > ch?.Length)
        {
            //validSubmit = false;
            yield return "Too few characters";
        }
        else
        {
            //validSubmit = true;
        }
    }

    //Custom Scale
    public string customTitle { get; set; }

    //Settings Button
    private bool visible;
    private void OpenDialog() => visible = true;
    void CloseDialog() => visible = false;
    void SubmitDialog() => visible = false;
    private DialogOptions dialogOptions = new() { FullWidth = true };

    //AppDrawer
    bool _drawerOpen = false;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    public int Voting_Mode { get; set; } = 1;

    //Table
    string[] headings = { "User", "Vote" };
    string[] rows = {
        @"User1 1",
        @"User2 2",
        @"User3 3",
        @"User4 4",
        @"User5 5",
        @"User6 6",
    };

    //Voting Mode
    void setVotingMode(int mode){
        Voting_Mode = mode;
    }

    //Unhighlights AppBar Buttons

    string setVote(string val)
    {
        return val;
    }

    //Symbols
    char coffee = '\u2615';
    char half = '\u00BD';
} 