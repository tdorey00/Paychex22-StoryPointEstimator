@page "/createRoom"
@using StoryPointEstimatorBlazorApp.Models
<style>
    .inputArea{
        text-align : center;
    }
    .inputText{
        background-color: #EDEDED;
        display:inline-block;
        padding-left:30px;
        padding-right:30px;
        padding-top:30px;
        padding-bottom:30px;
        margin:10px;
    }
    .inputSpacer{
        padding-top:10px;
        padding-bottom:10px;
    }
</style>


<div class="inputArea">
    <div class="inputText">
        <EditForm Model="@newRoomModel" OnValidSubmit="@insertData">
            <ObjectGraphDataAnnotationsValidator />

            <div class = "inputSpacer">
                <div class="form-group">
                    <label for="roomName">Enter a room name: </label>
                    <InputText id="roomName" Class="form-control" @bind-Value="newRoomModel.roomName"/>
                    <ValidationMessage For="@(() => newRoomModel.roomName)" />
                </div>
            </div>

            <div class = "inputSpacer">
                <div class="form-group">
                    <label for="userName">Enter a Username:</label>
                    <InputText id="userName" class="form-control" @bind-Value="newRoomModel.userName"/>
                    <ValidationMessage For="@(() => newRoomModel.userName)" />
                </div>
            </div>

            <div class = "inputSpacer">
                <div class="form-group">
                    <label for="isAdmin">Are you a facilitator?</label>
                    <input type="checkbox" id="isAdmin" @bind="newRoomModel.isAdmin">
                </div>
            </div>

            <button type="submit" class="btn btn-primary">Create Room</button>
            <a class="btn btn-primary" href="/">Cancel</a>
        </EditForm>
    </div>
</div>

@code {

    private DisplayRoomModel newRoomModel = new DisplayRoomModel();

    //TODO When database is finished need to make sure generated code is unique
    private int createRoomCode()
    {
        Random rand = new Random();
        return rand.Next(1000, 10000); //generates a random room code between 1000 and 9999
    }
    //TODO When database is finished need to make sure generated code is unique
    private int createUserId()
    {
        Random rand = new Random();
        return rand.Next(1000, 10000); //generates a random user ID between 1000 and 9999
    }

    private async Task insertData(){
        //TODO Add data to newRoomModel and update db 
    }
}
